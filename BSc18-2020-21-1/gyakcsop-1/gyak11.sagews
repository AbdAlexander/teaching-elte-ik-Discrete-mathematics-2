︠2bc7ec21-bb00-4104-affc-8a378cb94eabs︠
# gyak11

# fsor08

# 1

def SSS_secret_pieces_from_primenum_and_coeffs(num_of_people, secret, primenum, coeff):
    list_of_coeff = coeff + [secret]
    list_of_coeff.reverse()
    p = GF(primenum)['x'](list_of_coeff)
    #print(p)
    result = list()
    for i in [1..num_of_people]:
        result.append((i, p(i)))
    return result

SSS_secret_pieces_from_primenum_and_coeffs(4, 5, 7, [4, 3]) # 4x^2 + 3x + 5
# (1, 5), (2, 6), (3, 1), (4, 4)

︡3d080ca8-d22c-4f2c-bb5d-a385e14f696c︡{"stdout":"[(1, 5), (2, 6), (3, 1), (4, 4)]\n"}︡{"done":true}
︠3f615d74-02ca-4df9-be15-0a41742b3d34s︠

GF(19)['x']([1, 2, 3])

︡fedec885-bd6d-456f-8f2a-90838e3e560d︡{"stdout":"3*x^2 + 2*x + 1\n"}︡{"done":true}
︠269f4f2c-52c2-4e13-a532-68f029ec7122s︠

SSS_secret_pieces_from_primenum_and_coeffs(7, 1344, 2017, [10, 11, 12, 13, 14])

︡3498225a-1a41-4619-bd95-7381409d7d4b︡{"stdout":"[(1, 1404), (2, 2016), (3, 1114), (4, 1313), (5, 1024), (6, 1705), (7, 993)]\n"}︡{"done":true}
︠cfb123a3-d51e-43a1-950a-ae5b864f9cc2s︠

# 2

def SSS_compute_secret(primenum, secret_pieces):
    p = GF(primenum)['x'].lagrange_polynomial(secret_pieces)
    return p.constant_coefficient() # return p(0)

SSS_compute_secret(7, [(1, 5), (3, 1), (4, 4)]) # p = 4x^2 + 3x + 5 -> szabad tag (5)

SSS_compute_secret(7, [(1, 5), (3, 1)])

︡14da6bab-fbca-461c-8110-5607d1a12e12︡{"stdout":"5\n"}︡{"stdout":"0\n"}︡{"done":true}
︠c164731d-6949-468f-a4e3-3a807ed13141s︠

SSS_compute_secret(2017, [(1, 1404), (2, 2016), (3, 1114), (4, 1313), (5, 1024), (6, 1705)])

︡a5241916-5e69-460a-8900-2591d3b7912d︡{"stdout":"1344\n"}︡{"done":true}
︠2ae125f4-1f70-48f6-af3a-5746dcb24e7fs︠

# 4

randint(1, 5)

︡b199ea0f-ef2a-4a5f-b774-8c140582e979︡{"stdout":"1\n"}︡{"done":true}
︠5ef2f328-f82d-4e87-816b-93b155756b98s︠


def SSS_secret_parts(required_num_of_people, num_of_people, secret):
    primenum = next_prime(max(secret, num_of_people) + 100*randint(1, secret))
    coeff = [1] + [randint(1, primenum) for i in [1..required_num_of_people-2]]
    secret_pieces = SSS_secret_pieces_from_primenum_and_coeffs(num_of_people, secret, primenum, coeff)
    return primenum, secret_pieces


SSS_secret_parts(3, 4, 5)

︡a521d8e3-d3c2-41f6-b1d3-301661e3301d︡{"stdout":"(107, [(1, 45), (2, 87), (3, 24), (4, 70)])\n"}︡{"done":true}
︠a90823ec-76d7-43cf-ad21-c12391bafe6ds︠

SSS_compute_secret(37, [(2, 20), (3, 12), (4, 6)])
SSS_compute_secret(37, [(2, 33), (3, 3)])

︡3da3aadc-c065-4685-864d-4f4dbedea953︡{"stdout":"5\n"}︡{"stdout":"19\n"}︡{"done":true}
︠49db6bc8-0e3a-450b-8f5e-278a3972728as︠

SSS_secret_parts(7, 10, 5235325)

︡dcf5f30a-3995-42f1-880f-5442930af950︡{"stdout":"(127763641, [(1, 88804770), (2, 77355777), (3, 62854632), (4, 42675506), (5, 39798294), (6, 95243533), (7, 4980758), (8, 78946706), (9, 111373266), (10, 12043482)])\n"}︡{"done":true}
︠cef376b3-7b0e-4685-922b-606fc2935502s︠

SSS_compute_secret(31453361, [(1, 1925876), (2, 416898), (3, 25671155), (4, 8697475), (5, 29953391), (6, 28041365), (7, 11659508)])

SSS_compute_secret(31453361, [(1, 1925876), (3, 25671155), (4, 8697475), (5, 29953391), (6, 28041365), (7, 11659508)])

︡06c5e5a1-0654-4368-8a82-0e6ee1590670︡{"stdout":"5235325\n"}︡{"stdout":"5232805\n"}︡{"done":true}
︠85747ed6-fcbe-4096-aa71-6ccbf4d37e6f︠

# 5

# 16-os számrendszer: 0, 1, ..., 9, A=10, B=11, C, D, E, F
# 1A = A * 16^0 + 1*16^1

ord('A')
ord('a')



︡cce056ea-fd73-46a6-877c-913bc4bd9cd4︡{"stdout":"65\n"}︡{"stdout":"97\n"}︡{"done":true}
︠a4ac03de-5d42-461b-b472-ff9c0ea35f88s︠

src = list("34fg__#Gfb34226fdsWWQl36lII234i<!%fGZjsdJFEBD77467effO+36{}__IOQsFF&363&ZzOO053")

#src = "alma"
result = 0
i = 0
src.reverse()
print(src)
for ch in src:
    #print(ord(ch))
    result += ord(ch)*256^i
    i += 1
print(result)

︡8ae09a73-f49d-4b79-a332-c9b6371f014d︡{"stdout":"['3', '5', '0', 'O', 'O', 'z', 'Z', '&', '3', '6', '3', '&', 'F', 'F', 's', 'Q', 'O', 'I', '_', '_', '}', '{', '6', '3', '+', 'O', 'f', 'f', 'e', '7', '6', '4', '7', '7', 'D', 'B', 'E', 'F', 'J', 'd', 's', 'j', 'Z', 'G', 'f', '%', '!', '<', 'i', '4', '3', '2', 'I', 'I', 'l', '6', '3', 'l', 'Q', 'W', 'W', 's', 'd', 'f', '6', '2', '2', '4', '3', 'b', 'f', 'G', '#', '_', '_', 'g', 'f', '4', '3']\n"}︡{"stdout":"3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547\n"}︡{"done":true}
︠bb2b37b1-f513-4e18-a4aa-5bb18ebca275︠

SSS_secret_parts(7, 10, result)

︡56b0856e-cf34-4201-9e21-1bc6d20bdca9︡{"stdout":"(222954674178887698290764899278667193430913123141081930174680863270516512987863327860785135927687096156344647657511394222284804835782201923072497798969856796701250622529864207708977470726220871, [(1, 139527647843236189778878469129270098798321685809272875080418487818553255426301474713433696511163297998790260683177734452880834957894212950132495570859336620593758497003164526882003514909186954), (2, 187284639924262456986456924711531764533599648716312832059763507968556429393327287507752867311898302090103325794615138580892227870174159187128550177706477039155687148842054042525193583911228924), (3, 209234465950725405096764549905804363622071923061854882517075790600084002433461155681819370054366770242453340176236447118196332378508346044190043585601219155931843045245735105158433370480110244), (4, 12728502199115645661631492513958043317842193219919231372602982823453357061406129749032413232292762757009659073623228234391903373484806125582957114525076586387537799638105830126544602711773666), (5, 127507957412500959193694163694849462538141709152649885218776985203172799607620990651877036837108408256115383657598895305399427002456365600122957848711470897710561654162361373367933229352401774), (6, 107684995483871357488575058048260198140023845547483693073683046107302409823940666140727885002926653968493338373775876194439580818407334338471963284650958753715865647788924134308063584954598119), (7, 178043970822799620308536062878843052660755508070548339754741805114562585307146565064430017566820458359621763154773695867283766465553224896522172963644311010269003122371337074387594615926882139), (8, 204886573575449452576952976116062040887251061927077177156220977175244430068176977331458090496856829885974233742300328340086984335554048421910126516717310250294563758343786543082786457868534347), (9, 4605019917909831317379419906135537010984999268315636574832216395219221028517441035786351886253442687327467954301913960929537238420822098965748503354689098992111345597810350179771837261767465), (10, 98164590707304749174140552761313808644730852880591501384689706360980900492317765304328909802909444591758427267135265135928343744986480439806388848173782132454622799418734253466782414616340020)])"}︡{"stdout":"\n"}︡{"done":true}
︠b7b548fd-ae42-44c6-98cc-998eb924dcd5︠

SSS_compute_secret(222954674178887698290764899278667193430913123141081930174680863270516512987863327860785135927687096156344647657511394222284804835782201923072497798969856796701250622529864207708977470726220871, [(2, 187284639924262456986456924711531764533599648716312832059763507968556429393327287507752867311898302090103325794615138580892227870174159187128550177706477039155687148842054042525193583911228924), (3, 209234465950725405096764549905804363622071923061854882517075790600084002433461155681819370054366770242453340176236447118196332378508346044190043585601219155931843045245735105158433370480110244), (4, 12728502199115645661631492513958043317842193219919231372602982823453357061406129749032413232292762757009659073623228234391903373484806125582957114525076586387537799638105830126544602711773666), (5, 127507957412500959193694163694849462538141709152649885218776985203172799607620990651877036837108408256115383657598895305399427002456365600122957848711470897710561654162361373367933229352401774), (6, 107684995483871357488575058048260198140023845547483693073683046107302409823940666140727885002926653968493338373775876194439580818407334338471963284650958753715865647788924134308063584954598119), (7, 178043970822799620308536062878843052660755508070548339754741805114562585307146565064430017566820458359621763154773695867283766465553224896522172963644311010269003122371337074387594615926882139), (8, 204886573575449452576952976116062040887251061927077177156220977175244430068176977331458090496856829885974233742300328340086984335554048421910126516717310250294563758343786543082786457868534347)])

︡863c3f60-a807-41b4-9b0a-77358d9b682d︡{"stdout":"3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547"}︡{"stdout":"\n"}︡{"done":true}
︠f77c76ba-14d6-441d-b5a2-4d8e0ab6b280s︠

num = 3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547

# 11 -> 2
# 11 : 2 == 5, m = 1
# 5 : 2 == 2, m = 1
# 2 : 2 == 1, m = 0
# 1 : 2 == 0, m = 1

chr(65)

L = list()
while num > 0:
    L.append(chr(num % 256))
    num //= 256
print(L)
L.reverse()
secret = "".join(L)
print(secret)

︡671241c8-2088-45be-8f70-84b0a6d999bf︡{"stdout":"'A'\n"}︡{"stdout":"['3', '5', '0', 'O', 'O', 'z', 'Z', '&', '3', '6', '3', '&', 'F', 'F', 's', 'Q', 'O', 'I', '_', '_', '}', '{', '6', '3', '+', 'O', 'f', 'f', 'e', '7', '6', '4', '7', '7', 'D', 'B', 'E', 'F', 'J', 'd', 's', 'j', 'Z', 'G', 'f', '%', '!', '<', 'i', '4', '3', '2', 'I', 'I', 'l', '6', '3', 'l', 'Q', 'W', 'W', 's', 'd', 'f', '6', '2', '2', '4', '3', 'b', 'f', 'G', '#', '_', '_', 'g', 'f', '4', '3']\n"}︡{"stdout":"34fg__#Gfb34226fdsWWQl36lII234i<!%fGZjsdJFEBD77467effO+36{}__IOQsFF&363&ZzOO053\n"}︡{"done":true}
︠34630a76-adb4-4c95-8f63-0ec3a62ad675︠










