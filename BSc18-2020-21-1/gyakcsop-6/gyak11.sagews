︠a1280edd-ffbe-4335-badc-11df4f75afc7s︠
# gyak11


# fsor8

# 1

def SSS_secret_pieces_from_primenum_and_coeffs(num_of_people, secret, primenum, coeff):
    coeff.append(secret)
    coeff.reverse();
    p = GF(primenum)['x'](coeff)
    #print(p)
    result = list()
    for i in [1..num_of_people]:
        result.append((i, p(i)))
    return result


SSS_secret_pieces_from_primenum_and_coeffs(4, 5, 7, [4, 3]) # p = 4x^2 + 3x + 5, i = 1..4 -> [(1, 5), (2, 6), (3, 1), (4, 4)]

︡c4025192-88a3-4773-9646-eacc8782bb87︡{"stdout":"[(1, 5), (2, 6), (3, 1), (4, 4)]\n"}︡{"done":true}
︠34e116d2-fb51-4f90-b864-31b1ed0e47aes︠

# 20 ember, legalább 10 ember szükséges
SSS_secret_pieces_from_primenum_and_coeffs(20, 1765, 2017, [11, 12, 13, 14, 15, 16, 17, 18, 19])

︡da080a8a-6696-4ba1-8f17-713e4982a5dd︡{"stdout":"[(1, 1900), (2, 1909), (3, 393), (4, 1637), (5, 54), (6, 391), (7, 618), (8, 1485), (9, 1793), (10, 934), (11, 19), (12, 1037), (13, 1564), (14, 824), (15, 799), (16, 408), (17, 1186), (18, 815), (19, 1599), (20, 817)]\n"}︡{"done":true}
︠622fb7c2-82fc-4c40-b4fb-858c8e74f5das︠

# 2

def SSS_compute_secret(primenum, secret_pieces):
    p = GF(primenum)['x'].lagrange_polynomial(secret_pieces)
    return p(0)
    #return p.constant_coefficient()


SSS_compute_secret(7, [(1, 5), (3, 1), (4, 4)]) # Lagrange p = 4x^2 + 3x + 5 -> szabad tagját: 5

︡24c04e5d-f07f-4068-ba0f-b576f178f76e︡{"stdout":"5\n"}︡{"done":true}
︠6c1ccab4-7849-494b-9f5a-40b28529a9a1︠

SSS_compute_secret(2017, [(1, 1900), (2, 1909), (3, 393), (4, 1637), (5, 54), (6, 391), (7, 618), (8, 1485), (9, 1793), (10, 934)])

SSS_compute_secret(2017, [(1, 1900), (3, 393), (4, 1637), (5, 54), (6, 391), (7, 618), (8, 1485), (9, 1793), (10, 934), (19, 1599)])

SSS_compute_secret(2017, [(1, 1900), (2, 1909), (3, 393), (4, 1637), (5, 54), (6, 391), (7, 618), (8, 1485), (9, 1793)])

︡c91f4577-801e-4ae7-84f0-0ed28e4d5d2c︡{"stdout":"1765\n"}︡{"stdout":"1765\n"}︡{"stdout":"1802\n"}︡{"done":true}
︠b99b53ac-1eb1-43d3-af0f-fc090e58b4c4︠

# 3

def get_possible_secrets(primenum):
    return [previous_prime(primenum)..primenum-1]

get_possible_secrets(7)

︡d88cb80e-fc42-4926-931b-f349f10c1d18︡{"stdout":"[5, 6]\n"}︡{"done":true}
︠5e3d6bca-0ce1-43fb-a57a-ced73e751dbd︠

get_possible_secrets(2017)

︡5fbeea26-e564-4d89-9942-34218dab7612︡{"stdout":"[2011, 2012, 2013, 2014, 2015, 2016]\n"}︡{"done":true}
︠b54418b5-02ea-4a96-bf86-3abe29713cbcs︠

# 4

randint(1, 3)

︡d4c03a36-556e-4361-9741-db3e50937ab9︡{"stdout":"1\n"}︡{"done":true}
︠437e4358-de6c-411f-97c6-0a9c1f0805e5s︠


def SSS_secret_parts(required_num_of_people, num_of_people, secret):
    primenum = next_prime(max(secret, num_of_people) + 10*randint(1, secret))
    coeff = [randint(1, primenum-1) for i in [1..required_num_of_people-1]]
    return primenum, SSS_secret_pieces_from_primenum_and_coeffs(num_of_people, secret, primenum, coeff)

SSS_secret_parts(3, 4, 5)

︡79684531-9678-47a0-8f8b-5c34a91aadee︡{"stdout":"(17, [(1, 6), (2, 11), (3, 3), (4, 16)])\n"}︡{"done":true}
︠8160a0da-1c82-4d5d-b7a2-b20e145ce99bs︠

SSS_compute_secret(17, [(1, 6), (2, 11), (3, 3)])

︡7fae8101-c8dc-4c4f-80a3-e10aee43623d︡{"stdout":"5\n"}︡{"done":true}
︠d2f2e9b0-4540-43f3-8f2b-52f7e254337ds︠

SSS_compute_secret(17, [(1, 6), (2, 11)])

︡3100cc4a-7795-4b60-a0e7-62137cee45ec︡{"stdout":"1\n"}︡{"done":true}
︠3b8e0328-ae50-43e7-b09b-80cc22ebf0aa︠

# 5

password = "34fg__#Gfb34226fdsWWQl36lII234i<!%fGZjsdJFEBD77467effO+36{}__IOQsFF&363&ZzOO053"

ord('A')
chr(65)

# 16-os számrendszer: 0, 1, ..., 9, A=10, B=11, ... F
# 1.0.
# len = 2
# 1A = 1 * 16^1 + 10 * 16^0 = ...

︡ae5e396e-15f2-4374-8699-2a9f38f552ed︡{"stdout":"65\n"}︡{"stdout":"'A'\n"}︡{"done":true}
︠d3c4a5f9-27bb-4903-94a7-0ce13a584d5bs︠

result = 0
i = 0
password_len = len(password)
for ch in password:
    result += ord(ch) * 256^(password_len - 1 - i)
    i += 1
print(result)

︡accd077a-d07e-424e-a9ee-1cb0b834e84f︡{"stdout":"3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547\n"}︡{"done":true}
︠96090b9f-85c8-43ae-9472-1ad3958a7706s︠

SSS_secret_parts(7, 10, result)

︡db9a8508-9c8b-4e04-a194-adae5b0647a1︡{"stdout":"(32567038486849348483601419664681487416956784244254734143918086215727834620271716780734891080204849431347170441776210550681879411576136931537480987046462254190498704273326389674141836496802063, [(1, 8618823233086433357995982366134769568661859774239523659879482561096088960225480549954908731863000012177901961608070398303647645169606875115431776727783910775262060382580620639079127999743056), (2, 26084508888402237187851919732734499985878357203020588571017630186601347075448110884443527060203807662917785482370679184725862284080490469734339014781358246928198860958182958412073036651134893), (3, 17430212544443457000541812920707640742233760954921044126661884176718395127068979611637648103707772919502283945015263952926490780248607494568397904077102300629339984124943940107515632764235083), (4, 16914073745733194599478529084017912040706730386161705567966081658723911130158627802091034315829808190629096013653516771277317580174097147337577171797957677474104116295621327838031721279990720), (5, 20313798586703252210336289573598510924808208307829907452471018638049844733272888336700312702386558262857102725475449933461108254062285051531125712204964661791389313423827582138458614427655798), (6, 18337150845277157132836723008495009790693775394674242545722652300257448318044380031569659798116547073911987274829390475698444295743291391046490785277447584020801529430674821734735424899100342), (7, 11877892299643543568138072517020513576076423738883220897775394383653968070647119142427897880111915993292291562707462529681963953501713662337807822636221450389562352723363719689272702713449524), (8, 9117172228219891621827557147923075625939749548847849104580495622551995025134248248598002418121753610175909511636557511218009091816384044073961840749819834889095950805716335922802415772052764), (9, 4470366092806623482516887451565372235051564992908129754259521261171476078648882516519020761727017028627017145974792144575678084010201384306220461423744033551295222980652886112708274103782816), (10, 4513440378630253743243774560479610701191497676592949346099090069640054219051506904290184224796743532797780321165875423907043558962311668220400513665657989405464569691265226316120070794268965)])"}︡{"stdout":"\n"}︡{"done":true}
︠ce13b441-f35f-4341-a92e-64bc7974bd6as︠

SSS_compute_secret(32567038486849348483601419664681487416956784244254734143918086215727834620271716780734891080204849431347170441776210550681879411576136931537480987046462254190498704273326389674141836496802063, [(2, 26084508888402237187851919732734499985878357203020588571017630186601347075448110884443527060203807662917785482370679184725862284080490469734339014781358246928198860958182958412073036651134893), (3, 17430212544443457000541812920707640742233760954921044126661884176718395127068979611637648103707772919502283945015263952926490780248607494568397904077102300629339984124943940107515632764235083), (4, 16914073745733194599478529084017912040706730386161705567966081658723911130158627802091034315829808190629096013653516771277317580174097147337577171797957677474104116295621327838031721279990720), (5, 20313798586703252210336289573598510924808208307829907452471018638049844733272888336700312702386558262857102725475449933461108254062285051531125712204964661791389313423827582138458614427655798), (6, 18337150845277157132836723008495009790693775394674242545722652300257448318044380031569659798116547073911987274829390475698444295743291391046490785277447584020801529430674821734735424899100342), (7, 11877892299643543568138072517020513576076423738883220897775394383653968070647119142427897880111915993292291562707462529681963953501713662337807822636221450389562352723363719689272702713449524), (8, 9117172228219891621827557147923075625939749548847849104580495622551995025134248248598002418121753610175909511636557511218009091816384044073961840749819834889095950805716335922802415772052764)])

SSS_compute_secret(32567038486849348483601419664681487416956784244254734143918086215727834620271716780734891080204849431347170441776210550681879411576136931537480987046462254190498704273326389674141836496802063, [(2, 26084508888402237187851919732734499985878357203020588571017630186601347075448110884443527060203807662917785482370679184725862284080490469734339014781358246928198860958182958412073036651134893), (3, 17430212544443457000541812920707640742233760954921044126661884176718395127068979611637648103707772919502283945015263952926490780248607494568397904077102300629339984124943940107515632764235083), (4, 16914073745733194599478529084017912040706730386161705567966081658723911130158627802091034315829808190629096013653516771277317580174097147337577171797957677474104116295621327838031721279990720), (5, 20313798586703252210336289573598510924808208307829907452471018638049844733272888336700312702386558262857102725475449933461108254062285051531125712204964661791389313423827582138458614427655798), (7, 11877892299643543568138072517020513576076423738883220897775394383653968070647119142427897880111915993292291562707462529681963953501713662337807822636221450389562352723363719689272702713449524), (8, 9117172228219891621827557147923075625939749548847849104580495622551995025134248248598002418121753610175909511636557511218009091816384044073961840749819834889095950805716335922802415772052764)])

︡44fc7d9e-d8e8-425b-aebb-b69dda4e4412︡{"stdout":"3564733067735719071646687286191003377609878724686405481337882898389016373456046506323076878927861827176786281900611822489011829592155079319045973686683531183534466558164788076421842157450547"}︡{"stdout":"\n"}︡{"stdout":"21027694419328759175877289930896314448340973564981057750792630565660961741372272653737746960503710412752581076493742786037784953742819635388133032828327896830867904424498230083276730729294393"}︡{"stdout":"\n"}︡{"done":true}
︠8deb5898-fdc5-4796-9d29-795b34a6b1b3s︠

# 10 -> 2
# 11 : 2 = 5, m = 1
# 5 : 2 = 2, m = 1
# 2 : 2 = 1, m = 0
# 1 : 2 = 0, m = 1

secret = list()
num = result
while num > 0:
    secret.append(chr(num % 256))
    num //= 256
secret.reverse()
original_password = "".join(secret)
print(original_password)

︡0004f3bd-fbc2-43e8-96e9-d23031fa0978︡{"stdout":"34fg__#Gfb34226fdsWWQl36lII234i<!%fGZjsdJFEBD77467effO+36{}__IOQsFF&363&ZzOO053\n"}︡{"done":true}
︠8b3b7194-fbb0-4b92-9c47-8bf911f995d3︠









